<SCRIPT LANGUAGE="JavaScript">
//<!-- 
function mod10( cardNumber ) { // LUHN Formula for validation of credit card numbers.
	var ar = new Array( cardNumber.length );
	var i = 0,sum = 0;
	//alert('i value is '+i);
   	for( i = 0; i < cardNumber.length; ++i ) 
	//alert('i value is '+i);
	{
    	ar[i] = parseInt(cardNumber.charAt(i));
	//alert('ar value is '+ar);
    }
    for( i = ar.length -2; i >= 0; i-=2 )
		//alert('i value is '+i);
	{ // you have to start from the right, and work back.
    		ar[i] *= 2;							 // every second digit starting with the right most (check digit)
			//alert('ar value is '+ar);
    		if( ar[i] > 9 ) ar[i]-=9;			 // will be doubled, and summed with the skipped digits.
    	}										 // if the double digit is > 9, ADD those individual digits together 


        	for( i = 0; i < ar.length; ++i ) {
        		sum += ar[i];						 // if the sum is divisible by 10 mod10 succeeds
        	}
			return (((sum%10)==0)?true:false);	 	
    }


function expired( month, year ) {
        	var now = new Date();							// this function is designed to be Y2K compliant.
        	var expiresIn = new Date(year,month,0,0,0);		// create an expired on date object with valid thru expiration date
        	expiresIn.setMonth(expiresIn.getMonth()+1);	    // adjust the month, to first day, hour, minute & second of expired month
        	if( now.getTime() >= expiresIn.getTime() ) { 		// run the check digit algorithm
				alert("Sorry! This card is expired.");
				document.InputCCard.Expiration_Month_ComboBox.focus();
				return false;
			};
        	return true;									// then we get the miliseconds, and do a long integer comparison
    }


function validateCard(cardNumber,cardType) {

	if( cardNumber.length == 0 ) {						//most of these checks are self explanitory
		alert("Please enter a valid card number.");
		document.InputCCard.Card_Type_ComboBox.focus();
		return false;				
	}
	for( var i = 0; i < cardNumber.length; ++i ) {		// make sure the number is all digits.. (by design)
		var c = cardNumber.charAt(i);


			if( c < '0' || c > '9' ) {
				alert("Please enter a valid card number. Use only digits. do not use spaces or hyphens.");
				document.InputCCard.Card_Type_ComboBox.focus();
				return false;
			}
		}
	var length = cardNumber.length;			//perform card specific length and prefix tests

	switch( cardType ) {
		case 'A':
			if( length != 15 ) {
				alert("Please enter a valid American Express Card number.");
				return false;
			}
			var prefix = parseInt( cardNumber.substring(0,2));
			if( prefix != 34 && prefix != 37 ) {
				alert("Please enter a valid American Express Card number.");
				return false;
				}
			break;
		case 'D':
			if( length != 16 ) {
				alert("Please enter a valid Discover Card number.");
				return false;
			}
			var prefix = parseInt( cardNumber.substring(0,4));
			if( prefix != 6011 ) {
				alert("Please enter a valid Discover Card number.");
				return false;
			}
			break;
		case 'M':
			if( length != 16 ) {
				alert("Please enter a valid MasterCard number.");
				return false;
			}
			var prefix = parseInt( cardNumber.substring(0,2));
			if( prefix < 51 || prefix > 55) {
				alert("Please enter a valid MasterCard Card number.");
				return false;
			}
			break;
		case 'V':
			if( length != 16 && length != 13 ) {
				alert("Please enter a valid Visa Card number.");
				return false;
			}
			var prefix = parseInt( cardNumber.substring(0,1));
			if( prefix != 4 ) {
				alert("Please enter a valid Visa Card number.");
				return false;
			}
			break;
		}
		if( !mod10( cardNumber ) ) { 		// run the check digit algorithm
			alert("Sorry! this is not a valid credit card number.");
			return false;
		}

		return true; // at this point card has not been proven to be invalid
}

function CIDRequired(cidNum,cardType){

	switch(cardType) {
	
		case 'A':
			if(document.InputCCard.AE_CID_Req.value == 'Y') {
				if(cidNum.length < 4) {
					alert("Please enter a valid American Express Card Security ID.");
					return false;
				}
			}
			break;
		case 'D':
			if(document.InputCCard.Disc_CID_Req.value == 'Y') {
				if(cidNum.length < 3) {
					alert("Please enter a valid Discover Card Security ID.");
					return false;
				}
			}
			break;
		case 'M':
			if(document.InputCCard.MC_CID_Req.value == 'Y') {
				if(cidNum.length < 3) {
					alert("Please enter a valid Master Card Security ID.");
					return false;
				}
			}
			break;
		case 'V':
			if(document.InputCCard.Visa_CID_Req.value == 'Y') {
				if(cidNum.length < 3) {
					alert("Please enter a valid Visa Card Security ID.");
					return false;
				}
			}
			break;
	}

	return true;  //at this point CID has not been proven to be invalid

}

function LTrim(str) 
	{
	for (var i=0; str.charAt(i)==" "; i++);
	return str.substring(i,str.length);
	}
function RTrim(str) 
	{
	for (var i=str.length-1; str.charAt(i)==" "; i--);
	return str.substring(0,i+1);
	}
function Trim(str) 
	{
	return LTrim(RTrim(str));
	}

function isUSStateAbbr(val)
	{
	val = val+"";
        if (val.length != 2) { return false; }
        if (val.charAt(0) == ' ' || val.charAt(1) == ' ') { return false; }
	var string="AK AL AR AZ CA CO CT DC DE FL GA HI IA ID IL IN KS KY LA MA MD ME MI MN MO MS MT NC ND NE NH NJ NM NV NY OH OK OR PA PR RI SC SD TN TX UT VA VI VT WA WI WV WY";
	if (string.indexOf(val.toUpperCase()) != -1) {
		return true;
		}
	return false;
	}

function SubmitForm()
{
	var check = 'true';
	var Name = LTrim(document.InputCCard.Name_on_Card.value);
	var Address = LTrim(document.InputCCard.Billing_Address_2.value);
	var City = LTrim(document.InputCCard.CardCity.value);
	var State = LTrim(document.InputCCard.CardState.value);
	var Zipcode = LTrim(document.InputCCard.CardZip_Code.value);

if (Name == '')
	{
		alert('Name on credit card cannot be blank');
		document.InputCCard.Name_on_Card.focus();
		return false;
	}
if (Address == '')
	{
		alert('Card Address cannot be blank');
		document.InputCCard.Billing_Address_2.focus();
		return false;
	}
if (City == '')
	{
		alert('Card City cannot be blank');
		document.InputCCard.CardCity.focus();
		return false;
	}
if (State == '')
	{
		alert('The State cannot be blank');
		document.InputCCard.CardState.focus();
		return false;
	}
if (State != '' && isUSStateAbbr(State) == false)
	{
		alert('The State Does not exist');
		document.InputCCard.CardState.focus();
		return false;
	}
if (Zipcode == '' || Zipcode.length < 5)
	{
		alert('Invalid Zip Code');
		document.InputCCard.CardZip_Code.focus();
		return false;
	}

return creditCheck()


// No errors submit the form
//removed this submit because of conflict of 2 submit buttons on form -- document.InputCCard.submit();
}

function creditCheck() 
{
	<!$MGIF_CARD_EXISTS>
	return true;
	<!$MGELSE>
	var a = validateCard(document.InputCCard.Card_Number.value,document.InputCCard.Card_Type_ComboBox.value)
	var b = CIDRequired(document.InputCCard.Card_CID.value,document.InputCCard.Card_Type_ComboBox.value)

	if(a == true && b == true)
	{
		return true;
	}

	return false;
	<!$MGENDIF>

}

//-->
</SCRIPT>

<CENTER>
<FORM Name="InputCCard" action="/scripts/mgrqispi.dll" method="POST" onsubmit="return SubmitForm()">
	<INPUT type="hidden" name="APPNAME" value="<!$MG_App_Name>">
	<INPUT type="hidden" name="PRGNAME" value="IMSCreditCardInfo">
	<INPUT type="hidden" name="ARGUMENTS" value="-N<!$MG_Session_Number>,-N<!$MG_Amount_Due>,-N1,-A<!$MG_Transaction_Type>,-A<!$MG_Billing_Group>,-A<!$MG_Registration_ID>,-N<!$MG_Came_From>,-AP,-LF,-LF,-LF,-N<!$MG_Merchant_Number>">
	<INPUT type="hidden" name="CreditCardId" value="<!$MG_CreditCardId>">
	<INPUT type="Hidden" name="Add_Info_Name" value="<!$MG_Add_Info_Name>">
	<INPUT type="Hidden" name="Add_Info_Office" value="<!$MG_Add_Info_Office>">
	<INPUT type="Hidden" name="Attn_CO" value="<!$MG_Attn_CO>">
	<INPUT type="Hidden" name="Street_Addr" value="<!$MG_Street_Addr>">
	<INPUT type="Hidden" name="City" value="<!$MG_City>">
	<INPUT type="Hidden" name="State" value="<!$MG_State>">
	<INPUT type="Hidden" name="Zip_Code" value="<!$MG_Zip_Code>">
	<INPUT type="Hidden" name="Zip_Plus_4" value="<!$MG_Zip_Plus_4>">
	<INPUT type="Hidden" name="AE_CID_Req" value="<!$MG_AE_CID_Req>">
	<INPUT type="Hidden" name="Disc_CID_Req" value="<!$MG_Disc_CID_Req>">
	<INPUT type="Hidden" name="MC_CID_Req" value="<!$MG_MC_CID_Req>">
	<INPUT type="Hidden" name="Visa_CID_Req" value="<!$MG_Visa_CID_Req>">


<CENTER>

<TABLE border="0" width="100%" cellpadding="2" cellspacing="0">
	<TR CLASS="bgbar" >
		<TD CLASS="nnText" align="left" nowrap>&nbsp;Please <!$MGIF_CARD_EXISTS>update<!$MGELSE>enter<!$MGENDIF> your credit card information below</TD>
	</TR>
</TABLE>

<BR>
<TABLE border="0" width="60%" cellpadding="0" cellspacing="2">
	<TR>
		<TD align="left" colspan="4" nowrap>&nbsp;</TD>
	</TR>
	<TR>
		<TD CLASS="bText" nowrap width="35%">&nbsp;Credit Card Type</TD>
		<!$MGIF_CARD_EXISTS>
			<TD CLASS="bTextMarine" nowrap width="65%"><!$MG_Pmt_Card_Desc><INPUT CLASS="input" type="hidden" name="Card_Type_ComboBox" value="<!$MG_Pmt_Card_Type>"></TD>
		<!$MGELSE>
			<TD nowrap width="65%">
				<SELECT name="Card_Type_ComboBox" size="1">
					<!$MGREPEAT>
					<!-- Change program to output CID_Required_R for each allowed credit card type -->
					<!--<TD><INPUT type="hidden" name="Card_CID_Required<!$MG_Card_Type>" value="<!$MG_CID_Required>"></TD>-->
						<OPTION CLASS="input" value="<!$MG_Card_Type>"><!$MG_Card_Description></OPTION>
					<!$MGENDREPEAT>
				</SELECT>
			</TD>
		<!$MGENDIF>
	</TR>
	<TR>
		<TD CLASS="bText" nowrap>&nbsp;Credit Card Number&nbsp;&nbsp;&nbsp;&nbsp;</TD>
		<!$MGIF_CARD_EXISTS>
			<TD CLASS="bTextMarine" nowrap><!$MG_Card_Number><INPUT type="hidden" name="Card_Number" value="<!$MG_Card_Number>"></TD>
			<!-- We should do the CID required checking for both whether the CID exists or NOT exists -->
			<!-- Also add java code if CID_Required_R = Y for this card type then force them to input a value -->
	</TR>
	<TR>
			<!$MGIF_CID_EXISTS>
				<TD CLASS="bText" nowrap>&nbsp;Card ID&nbsp;&nbsp;&nbsp;&nbsp;</TD>
				<TD nowrap><INPUT class="input" type="text" name="Card_CID" size="4" maxlength="4" value="<!$MG_Card_CID>">&nbsp;&nbsp;<A CLASS="sTextBlue" href="javascript://#LookUp" onclick=" var picWindow = window.open('<!$MG_ImageAlias>CID.jpg','newWin','menubar=no,toolbar=no,resizable=yes,directories=no,scrollbars=no,status=no,height=360,width=550,left=80,top=60');">Card 
			Security ID help</A></TD>
				<TD width="200" nowrap>&nbsp;</TD>
				
			<!$MGENDIF>
		<!$MGELSE>
			<TD nowrap><INPUT CLASS="input" type="text" name="Card_Number" size="31" maxlength="19" value="<!$MG_Card_Number>" onBlur="if(!validateCard(document.InputCCard.Card_Number.value,document.InputCCard.Card_Type_ComboBox.value)){document.InputCCard.Card_Type_ComboBox.focus();}"></TD>
			<TD CLASS="bText" nowrap>&nbsp;&nbsp;Card Security ID&nbsp;&nbsp;</TD>
			<!-- We should pass the CID_required value to the function in the parens -->
			<TD nowrap><INPUT CLASS="input" type="text" name="Card_CID" size="4" maxlength="4" value="<!$MG_Card_CID>" onBlur="if(!CIDRequired(document.InputCCard.Card_CID.value,document.InputCCard.Card_Type_ComboBox.value)){document.InputCCard.Card_Type_ComboBox.focus();}">&nbsp;&nbsp;<A CLASS="sTextBlue" href="javascript://#LookUp" onclick=" var picWindow = window.open('<!$MG_ImageAlias>CID.jpg','newWin','menubar=no,toolbar=no,resizable=yes,directories=no,scrollbars=no,status=no,height=360,width=550,left=80,top=60');">Card 
			Security ID help</A></TD>
		<!$MGENDIF>
	</TR>
	<TR>
		<TD CLASS="bText" nowrap>&nbsp;Expiration Date</TD>
		<TD valign="middle" nowrap><SELECT name="Expiration_Month_ComboBox" size="1">
			<!$MGREPEAT>
				<OPTION CLASS="input" value="<!$MG_Expiration_Mo>" <!$MG_Exp_Mo_Selected>><!$MG_Expiration_Mo></OPTION>
			<!$MGENDREPEAT>
			</SELECT>&nbsp;<B>/</B>&nbsp;<SELECT name="Expiration_Year_ComboBox" size="1" onBlur="expired(document.InputCCard.Expiration_Month_ComboBox.value,document.InputCCard.Expiration_Year_ComboBox.value)">
			<!$MGREPEAT>
				<OPTION CLASS="input" value="<!$MG_Expiration_Yr>" <!$MG_Exp_Year_Selected>><!$MG_Expiration_Yr></OPTION>
			<!$MGENDREPEAT>
			</SELECT>
		</TD>
	</TR>
	<!$MGIF_KEEP_ON_FILE>
		<TR>
			<TD CLASS="bText"nowrap>&nbsp;Keep On File</TD>
			<TD valign="middle" nowrap><SELECT name="Keep_In_File" size="1">
					<OPTION CLASS="input" value="N">No</OPTION>
					<OPTION CLASS="input" value="Y">Yes</OPTION>
			</SELECT>
			</TD>
		</TR>
	<!$MGELSE>
		<INPUT type="hidden" name="Keep_In_File" value="N">
	<!$MGENDIF>
</TABLE>
<BR>
<TABLE border="0" width="60%" cellpadding="0" cellspacing="2">
	<TR>
		<TD CLASS="bigTextMarine" align="left" colspan="2" nowrap>&nbsp;Credit Card Billing Address</TD>
	</TR>
	<TR>
		<TD align="left" colspan="2" nowrap>&nbsp;</TD>
	</TR>
	<TR>
		<TD CLASS="bText" nowrap>&nbsp;Name on Credit Card</TD>
		<TD  nowrap><INPUT CLASS="input" type="text" name="Name_on_Card" size="31" maxlength="30" value="<!$MG_Name_On_Card>"></TD>
	</TR>
	<TR>
		<TD CLASS="bText" nowrap>&nbsp;Attn/Care of</TD>
		<TD nowrap><INPUT CLASS="input" type="text" name="Billing_Address_1" size="31" maxlength="30" value="<!$MG_Billing_Address_1>"></TD>
	</TR>
	<TR>
		<TD CLASS="bText" nowrap>&nbsp;Address</TD>
		<TD nowrap><INPUT CLASS="input" type="text" name="Billing_Address_2" size="31" maxlength="30" value="<!$MG_Billing_Address_2>"></TD>
	</TR>
	<TR>
		<TD CLASS="bText" nowrap>&nbsp;City, State ZIP</TD>
		<TD nowrap>
			<INPUT CLASS="input" type="text" name="CardCity" size="23" maxlength="21" value="<!$MG_CardCity>">&nbsp;&nbsp;
			<INPUT CLASS="input" type="text" name="CardState" size="2" maxlength="2" value="<!$MG_CardState>">&nbsp;
			<INPUT CLASS="input" type="text" name="CardZip_Code" size="5" maxlength="5" value="<!$MG_CardZip>">-<INPUT CLASS="input" type="text" name="CardZip_Plus_4" size="4" maxlength="4" value="<!$MG_CardZip_Plus4>">
		</TD>
	</TR>
	<!$MGIF_HAS_CARDS>
		<TR>
			<TD colspan="2">&nbsp;</TD>
		</TR>
		<TR>
			<TD align="right" nowrap><INPUT type="checkbox" name="Default_CheckBox" <!$MG_Default_CheckBox_On>></TD>
			<TD CLASS="bText" colspan="2" nowrap>Set as my Default Credit Card</TD>
		</TR>
	<!$MGELSE>
		<INPUT type="hidden" name="Default_CheckBox" value="on">
	<!$MGENDIF>
</TABLE>
<BR>
<TABLE border="0" width="80%" align="center" cellpadding="0" cellspacing="0">
		<TR>
			<TD CLASS="nnTextRed" align="center" nowrap>&nbsp;Please note:&nbsp;&nbsp;Adding or modifying credit card information on this form <!$MGIF_PAYMENT_PLAN><b>may</b><!$MGELSE><b>does not</b><!$MGENDIF> update your automatic credit card payment information.</TD>
		</TR>
	</TABLE>
<BR>
<TABLE border="0" width="30%" cellpadding="0" cellspacing="2">
	<TR align="center">
		<TD><INPUT type="submit" name="check" value="Submit"></TD>
		<!$MGIF_HAS_CARDS>
		<TD><INPUT type="submit" name="submit" value="Delete this Card">
		<!$MGENDIF>
		</TD>
	</TR>
</TABLE>
</FORM>
</CENTER>
