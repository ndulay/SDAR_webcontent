<script language="javascript" src="MLSCalendar.js"></SCRIPT>
<SCRIPT language="javascript" src="DateUtilities.js"></SCRIPT>
<SCRIPT LANGUAGE="JavaScript">
<!---
var strdesc1= '<!$MG_Comment>'; //Magic merge tag 
var strdesc2= '<!$MG_New_Status_Description>'; //Magic merge tag 
var strdesc3= '<!$MG_Date>'; //Magic merge tag 
var strdesc4= '<!$MG_Amount>'; //Magic merge tag 
var deletechk=''

function isValidDate(strDate, strReturnType)
{
	// Create Date object for current date (Date constructor defaults to current date)
	var dtCurrentDate = new Date();

	// Array for Month, Day, Year values
	var aMonthDayYear = new Array(3);

	// Initialize Regular Expression objects with date format patterns
	var reDatePatternSeparators = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{2}|\d{4})$/;
	var reDatePatternMMDDYYYY = /^\d{8}$/;
	var reDatePatternMMDDYY = /^\d{6}$/;

	// Valid date separators
	var strSlashSeparator = "/";
	var strDashSeparator = "-";
	var strDateSeparator = "";

	// Parse Date
	if(reDatePatternSeparators.test(strDate))
	{
		strDateSeparator = strDate.indexOf(strDashSeparator) != -1 ? strDashSeparator : strSlashSeparator
		aMonthDayYear = strDate.split(strDateSeparator);
	}
	else if(reDatePatternMMDDYYYY.test(strDate) ||
			reDatePatternMMDDYY.test(strDate))
	{
		aMonthDayYear[0] = strDate.substr(0, 2);
		aMonthDayYear[1] = strDate.substr(2, 2);
		aMonthDayYear[2] = strDate.substr(4);
	}
	else
	{
		return strReturnType = "D" ? null : false;
	}

	// Valid Month and Day values
	if((parseInt(aMonthDayYear[0], 10) >= 1 && parseInt(aMonthDayYear[0], 10) <= 12) &&
		(parseInt(aMonthDayYear[1], 10) >= 1 || parseInt(aMonthDayYear[0], 10) <= 31))
	{
		// Convert two digit year to four digit year (adjust century if needed)
		if(aMonthDayYear[2].length == 2)
		{
			aMonthDayYear[2] = dtCurrentDate.getFullYear().toString().substr(0,2) + aMonthDayYear[2];
			if(parseInt(aMonthDayYear[2].substr(2), 10) > 50)
				aMonthDayYear[2] = parseInt(aMonthDayYear[2],10) - 100;
		}

		// Valid Day for February
		if(parseInt(aMonthDayYear[0], 10) == 2)
		{
			if(parseInt(aMonthDayYear[1], 10) > 29 ||
				(!isLeapYear(aMonthDayYear[2]) && parseInt(aMonthDayYear[1], 10) > 28))
			{
				return strReturnType = "D" ? null : false;
			}
		}// Valid Day for April, June, September, November
		else if(parseInt(aMonthDayYear[0], 10) == 4 ||
				parseInt(aMonthDayYear[0], 10) == 6 ||
				parseInt(aMonthDayYear[0], 10) == 9 ||
				parseInt(aMonthDayYear[0], 10) == 11)
		{
			if(parseInt(aMonthDayYear[1], 10) > 30)
			{
				return strReturnType = "D" ? null : false;
			}
		}
	}
	else
	{
		return strReturnType = "D" ? null : false;
	}

	return strReturnType = "D" ? new Date(aMonthDayYear[0] + "/" + aMonthDayYear[1] + "/" + aMonthDayYear[2]) : true;
}

function isLeapYear(intYear)
{
	return intYear % 400 == 0 ||(intYear % 4 == 0 && intYear % 100 != 0) ? true : false
}

function dateToString(dtDate)
{
	return "0".substr((dtDate.getMonth() + 1).toString().length - 1) + (dtDate.getMonth() + 1) + "/" +
			"0".substr(dtDate.getDate().toString().length - 1) + dtDate.getDate() + "/" +
			dtDate.getYear().toString().substr(2);
}


// Validate task start and end time
function IsValidTime(timeStr)
{
	if (TrimSpaces(timeStr) == ""){return true} // allow blank values for time
	
	var timePat = /^(\d{1,2}):(\d{2})(:(\d{2}))?(\s?(AM|am|PM|pm))?$/;
	var matchArray = timeStr.match(timePat);
	if (matchArray == null)
	{
		alert("Time is not in a valid format (hh:mm).");
		return false;
	}
	hour = matchArray[1];
	minute = matchArray[2];
	second = matchArray[4];
	ampm = matchArray[6];
	if (second=="") { second = null; }
	if (ampm=="") { ampm = null }
	if (hour < 0 || hour > 12)
	{
		alert("Hour must be between 1 and 12.");
		return false;
	}
	if (minute<0 || minute > 59)
	{
		alert ("Minute must be between 0 and 59.");
		return false;
	}
	if (second != null && (second < 0 || second > 59))
	{
		alert ("Second must be between 0 and 59.");
		return false;
	}
	return true;
}
function IsTimeStartLessEnd(timeStrStart,timeStrEnd)
// This function will compare two time fields and return an error message if Start is more than end
// If any of the fields are blank, no error is returned
{
	if (TrimSpaces(timeStrStart)=='' || TrimSpaces(timeStrEnd)=='')
	{
		return true
	}
	if (timeStrStart > timeStrEnd)
	{
		alert ("Start time must be prior to end time.");
		return false
	}
	return true;
}	
function setMinutes(oHour,sMinuteFieldName)
// This function will Disable and set the Minute Field to Blank when Hour field is Blank
{
	if (oHour.selectedIndex == 0)
		{
			document.getElementsByName(sMinuteFieldName)[0].selectedIndex = 0
			document.getElementsByName(sMinuteFieldName)[0].disabled = true
		}
	else 
		{
			document.getElementsByName(sMinuteFieldName)[0].disabled = false
		}
}

function setComment(strValue)
{
	//alert('Set Comment to '+strValue);
	strdesc1 = strValue;
	window.opener.document.getElementById('Comment_For_<!$MG_List_Category><!$MG_List_Code>').innerText = strdesc1;
}
function setStatus(strValue)
{
	//alert('Set Status to '+strValue);
	strdesc2 = strValue;
	window.opener.document.getElementById('Status_For_<!$MG_List_Category><!$MG_List_Code>').innerText = strdesc2;
}
function setDate(strValue)
{
	strdesc3 = validateForm(strValue); //strValue;
//	alert(strValue);
//	validateForm(strdesc3);
//	alert(strdesc3);
	//alert('Set Date to '+strdesc3);
	window.opener.document.getElementById('Date_For_<!$MG_List_Category><!$MG_List_Code>').innerText = strdesc3;
}
function setAmount(strValue)
{
	strdesc4 = MoneyFormat(strValue);
	//alert('Set Amount to '+strdesc4);
	window.opener.document.getElementById('Amount_For_<!$MG_List_Category><!$MG_List_Code>').innerText = strdesc4;
}
function setDelete(strValue)
{
	//alert('delete strvalue is '+strValue);
	deletechk=strValue;
}
function MoneyFormat(amount) 
{
	var val = parseFloat(amount);
	if (isNaN(val)) { return "0.00"; }
	if (val <= 0) { return "0.00"; }
	else { val = Math.round(val*100)/100; }
	val = (val == Math.floor(val)) ? val + '.00' : ((val*10 == Math.floor(val*10)) ? val + '0' : val);
	return val;
}

function SubmitForm()
{
	//alert('In submit function');
	
//	document.getElementById('ARGUMENTS').value;
    if (document.ListCode.Comment)
    {
	    singleQuote = document.ListCode.Comment.value.split('\'');
	    doubleQuote = document.ListCode.Comment.value.split('\"');
	    if (singleQuote.length>1 || doubleQuote.length>1)
	    {
		    alert('Apostrophes and/or double quotes are not allowed in the comment field.');
		    document.ListCode.Comment.focus();

		    return false;
    	}
    }

	document.ListCode.submit();
	//if (deletechk == "checked")
	//{
		<!$MGIF_FROM_DIRECT>
		window.opener.location.href="/scripts/mgrqispi.dll?APPNAME=IMS&PRGNAME=IMSListMakerDirect&ARGUMENTS=-N<!$MG_Session_Number>,-A<!$MG_List_Category>,-A,-N0";
		<!$MGELSE>
		window.opener.document.location.reload(true);
		<!$MGENDIF>
	//}
	window.close();
	//window.opener.focus();
}

function CloseWindow()
{
	window.close();
}

function validateForm(strDate)
{
	// ============ Date Shown validation ==============
	// Validate date for correct format. If not in correct format, correct it.
	var cDate = new Date();
	cDate = isValidDate(strDate);
	if(strDate != "")
	{
		if(cDate == null)
		{
			alert("Invalid date");
			document.ListCode.Date.focus();
			return false;
		}
		else
		{
			document.ListCode.Date.value = dateToString(cDate);
			strDate = document.ListCode.Date.value;
		}
	}
	//==============================
	return strDate;
}
function CreateCalendarFrame()
{
	var calFrame = document.getElementById("CalFrame");
	
	if (calFrame.length == null)
	{
		if (document.getElementById("CalFrame") == null)
		{
			calFrame.id = "CalFrame";
			calFrame.src = "MLSCalendarIFrame.htm";
			calFrame.style.width = "212px";
			calFrame.style.height = "214px";
			calFrame.style.display = "none";
			calFrame.style.position = "absolute";
			calFrame.marginHeight= "0";
			calFrame.marginWidth = "0";
			calFrame.frameBorder = "no";
			calFrame.scrolling = "no";
			calFrame.noresize = "noresize";
			calFrame.style.zIndex = 555;
		}// if (document.getElementById("CalFrame") == null)
	}// if (calFrame.length == null)
}

//--->
</SCRIPT>


<IFRAME ID="CalFrame" style="display:none;position:absolute;width:204;z-index:555;height:178;" marginheight=0 marginwidth=0 noresize frameborder=0 scrolling=no src="MLSCalendarIFrame.htm" onChange="setDate(this.value)"></IFRAME>

<FORM name="ListCode" action="/scripts/mgrqispi.dll" method="POST">
	<INPUT type="hidden" name="APPNAME" value="<!$MG_App_Name>">
	<INPUT type="hidden" name="PRGNAME" value="IMSListMaker">
	<INPUT type="hidden" name="ARGUMENTS" value="-N<!$MG_Session_Number>,-A<!$MG_List_Category>,-A<!$MG_List_Code>,-N3,-A">

<CENTER>
<BR>
<TABLE border="0" cellspacing="0" cellpadding="0" width="100%">
	<TR CLASS="bgbar">
		<TD CLASS="nnText" nowrap>&nbsp;<!$MG_Description></TD>
	</TR>
</TABLE>

<BR>
<TABLE border="0" width="100%" cellpadding="2" cellspacing="0">
	<TR>
		<!$MGIF_ALLOW_COMMENT>
		<TD nowrap>&nbsp;&nbsp;</TD>
		<TD CLASS="bText" width="15%" nowrap>Comment</TD>
		<TD nowrap>&nbsp;&nbsp;<INPUT CLASS="input" type="text" id="Comment_For_<!$MG_List_Category><!$MG_List_Code>" 
		size="30" maxlength="30" name="Comment" value="<!$MG_Comment>" onChange="setComment(this.value)"></TD>
		<!$MGENDIF>
	</TR>
	<TR>
		<!$MGIF_ALLOW_STATUS>
		<TD nowrap>&nbsp;&nbsp;</TD>
		<TD CLASS="bText" width="15%" nowrap>Status</TD>
		<TD nowrap>&nbsp;&nbsp;<SELECT CLASS="input" id="Status" name="Status" face="arial" onChange="setStatus(this.options[this.options.selectedIndex].id)">
				<OPTION CLASS="input" id="Status_For_<!$MG_List_Category><!$MG_List_Code>" SELECTED VALUE="<!$MG_Status>"><!$MG_New_Status_Description></OPTION>		
				<!$MGREPEAT>
					<OPTION CLASS="input"  id="<!$MG_New_Status_Description1>" value="<!$MG_New_Status_1>"> <!$MG_New_Status_Description1></OPTION>
				<!$MGENDREPEAT>
			</SELECT>
		</TD>
		<!$MGENDIF>
	</TR>
	<TR>
		<!$MGIF_ALLOW_DATE>
		<TD nowrap>&nbsp;&nbsp;</TD>
		<TD CLASS="bText" width="15%" nowrap>Date</TD>
		<TD nowrap>&nbsp;&nbsp;<INPUT class="input" type="text" name="Date" id="Date_For_<!$MG_List_Category><!$MG_List_Code>" style="position: relative" size="15" maxlength="15" value="<!$MG_Date>" onChange="setDate(this.value)">
		<IMG align=top border=0 src="<!$MG_Images_Path>popCalendar.gif" style="position: relative; cursor: hand " title="View Calendar" onClick="getCalendarFor(Date, null, null)"></TD>
		<!$MGENDIF>
	</TR>
	<TR>
		<!$MGIF_ALLOW_AMOUNT>
		<TD nowrap>&nbsp;&nbsp;</TD>
		<TD CLASS="bText" width="15%" nowrap>Amount</TD>
		<TD nowrap>&nbsp;&nbsp;<INPUT CLASS="input" type="text" id="Amount_For_<!$MG_List_Category><!$MG_List_Code>" size="10" maxlength="10" name="Amount" value="<!$MG_Amount>" onChange="setAmount(this.value)"></TD>
		<!$MGENDIF>
	</TR>
	<!$MGIF_ALLOW_DELETE>
	<TR>
		<TD nowrap>&nbsp;&nbsp;</TD>
		<TD CLASS="bText" width="25%" nowrap>Delete</TD>
		<TD nowrap><INPUT type="checkbox" name="Delete_List" size="1" value="checked" onClick="setDelete(this.value)"></TD>
	</TR>
	<!$MGENDIF>
</TABLE>
<BR>
<TABLE border="0" width="100%" cellpadding="0" cellspacing="0">
	<TR>
		<TD align="center" nowrap><INPUT TYPE="button" VALUE="Update" onClick="SubmitForm()"></TD>
		<TD align="center" colspan="3" nowrap><INPUT TYPE="Button" VALUE="Close this window" onClick="CloseWindow()"></TD>
	</TR>
</TABLE>
</FORM>
</CENTER>

<script language="javascript">
<!--
	if (typeof(CreateCalendarFrame) != "undefined")
		CreateCalendarFrame();
//-->
</script>